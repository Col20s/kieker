plugins {
	id 'java'
	id 'java-library'
}

// The following lines are necessay to create a test jar
project.configurations {
	testArchives.extendsFrom (testCompile)
}

project.task ('jarTest', type:Jar, dependsOn: project.testClasses, description: 'create a jar from the test source set') {
	from project.sourceSets.test.output
	archiveClassifier = 'test'
}

project.artifacts {
	testArchives project.jarTest
}

// Since the analysis component requires JRE 11, this "tools component" requires JRE 11, too.
sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
	implementation project(':kieker-common')
	api project(':kieker-analysis')
	api project(':kieker-model')
	api project(':kieker-monitoring')

	api 'org.apache.commons:commons-math3:3.6.1'	// used by OPAD
	api 'org.apache.commons:commons-lang3:3.12.0'		// used by OPAD

	implementation "com.beust:jcommander:${jcommanderVersion}"

	implementation 'javax.jms:javax.jms-api:2.0.1'
	implementation 'javax.servlet:javax.servlet-api:4.0.1'

	implementation "ch.qos.logback:logback-classic:$libLogbackVersion"
	implementation "org.slf4j:slf4j-api:$libSlf4jApiVersion"
	implementation 'org.apache.groovy:groovy-all:4.0.12'

	// https://mvnrepository.com/artifact/com.github.yannrichet/Rsession
	implementation 'com.github.yannrichet:Rsession:1.8.3'

	// https://mvnrepository.com/artifact/org.rosuda.REngine/Rserve
	implementation 'org.rosuda.REngine:Rserve:1.8.1'

	// https://mvnrepository.com/artifact/org.rosuda.REngine/REngine
	implementation 'org.rosuda.REngine:REngine:2.1.0'

	// https://mvnrepository.com/artifact/org.apache.activemq/activemq-core
	api 'org.apache.activemq:activemq-core:5.7.0'


	// Some dependencies for the HTTP connector of the KDB
	api fileTree(dir: rootProject.file('kieker-examples/JavaEEServletContainerExample/jetty/lib'), include: 'jetty-*.jar')
	
	//OpenTelemetry dependency
	implementation("org.springframework.boot:spring-boot-starter-web");
    implementation("io.opentelemetry:opentelemetry-api:1.32.0");
    implementation("io.opentelemetry:opentelemetry-sdk:1.32.0");
    implementation("io.opentelemetry:opentelemetry-sdk-metrics:1.32.0");
    implementation("io.opentelemetry:opentelemetry-exporter-logging:1.32.0");
    implementation("io.opentelemetry:opentelemetry-semconv:1.32.0");
    implementation("io.opentelemetry:opentelemetry-sdk-trace:1.32.0") // Trace SDK
	implementation("io.opentelemetry:opentelemetry-exporter-otlp-http:1.32.0") 
	implementation('io.opentelemetry:opentelemetry-exporter-otlp-common:1.7.0-alpha')
	
	
	implementation 'io.opentelemetry:opentelemetry-exporter-zipkin:1.33.0-alpha'
	

	testImplementation "junit:junit:$libJunitVersion"

	testImplementation project(':kieker-common').sourceSets.test.output
	testImplementation project(':kieker-analysis').sourceSets.test.output
	
	implementation 'net.kieker-monitoring:kieker:1.14' 
    implementation 'net.kieker-monitoring:komm:1.14'   
    
    
     implementation "io.opentelemetry:opentelemetry-api:1.32.0"
    implementation "io.opentelemetry:opentelemetry-sdk:1.32.0"
    implementation "io.opentelemetry:opentelemetry-sdk-metrics:1.32.0"
    implementation "io.opentelemetry:opentelemetry-exporter-logging:1.32.0"
    implementation "io.opentelemetry:opentelemetry-semconv:1.32.0-alpha"
    implementation 'io.opentelemetry:opentelemetry-exporter-otlp-http-trace:1.32.0'
    implementation 'io.opentelemetry:opentelemetry-exporter-otlp:1.32.0'
    implementation 'io.opentelemetry:opentelemetry-exporter-zipkin:1.32.0'
    implementation 'io.zipkin.reporter2:zipkin-sender-okhttp3:2.16.2'
}
}
